Jogo: Black Jack

API doc:
https://deckofcardsapi.com/

Figma:
https://www.figma.com/file/Xsx9zO0C2LkGOOwYO2pjHj/Untitled?type=design&node-id=0-1&mode=design&t=GD16waoiVkwYEah1-0

Lógica e Requisitos:

- Apenas um jogador na mesa e o computador de Dealer 

- Distribuição de Cartas:

    Começar distribuindo duas cartas para o jogador e duas cartas para o computador (uma virada para cima e outra virada para baixo).

- Pontuação:

    Calcular a pontuação do jogador e do computador. No Blackjack, as cartas numéricas valem seu valor nominal, as cartas de figuras (valete, rainha, rei) valem 10, e o Ás pode valer 1 ou 11, dependendo da situação.

    Quando o jogador decide "stand", a pontuação é comparada entre o jogador e o dealer:
        - A pontuação da partida é a diferença de pontos de quem ganhou referente a quem perdeu
        - Caso um jogador ou o dealer passe de 21 pontos ele perderá a quantidade sobressalente de pontos e uma nova rodada vai começar.
        - Em caso de empate, nenhum ponto é ganho ou perdido.

- Escolha do Jogador:

    Permitir que o jogador escolha entre 
    "hit" (pedir mais uma carta)
    "stand" (ficar com as cartas atuais)
    "split" (dividir as cartas e fazer dois jogos)
    "double down" (dobrar a pontuação recebendo apenas mais uma carta)

- Jogada do Computador:

    Implementar a lógica para que o computador tome decisões automaticamente. Normalmente, o dealer deve "hit" enquanto sua pontuação for menor que 17 e "stand" a partir de 17.

- Verificação de Resultado:

    Após as escolhas do jogador e do computador, verificar quem tem a mão mais próxima de 21 sem ultrapassá-la. O vencedor é aquele que estiver mais próximo de 21.

- Reinicialização do Jogo:

    Permitir que o jogador reinicie o jogo para jogar novamente.


Exemplo de uso:

<div onClick={async () => {
const newDeckId = await createNewDeck();
setDeckId(newDeckId);
}}>Create Deck</div>

<div onClick={() => reShuffleDeck(deckId)}>Embaralhar</div>

<div onClick={async () => {
const newCards = await drawCards(deckId, '3');
setDrawedCards(newCards)
}}>Draw 3 cards</div>

<div onClick={() => createPile(deckId, 'Leo', drawedCards)}>Create PIle</div>

<div onClick={() => listGame(deckId)}>List ALl</div> 
